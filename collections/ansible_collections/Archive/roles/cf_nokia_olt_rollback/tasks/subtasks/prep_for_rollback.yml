---
- name: "prep_for_rollback.yml: set rollback flag | element: {{ target_card }}"
  ansible.netcommon.netconf_rpc:
    rpc: action
    xmlns: urn:ietf:params:xml:ns:yang:1
    content: "{{ lookup('template', 'templates/set_rollback_flag.jinja2') }}"
    display: json
  register: cf_nokia_olt_rollback__rollback_status
  changed_when:
    - cf_nokia_olt_rollback__rollback_status['output']['rpc-reply']['ok'] is defined
  failed_when:
    - cf_nokia_olt_rollback__rollback_status['output']['rpc-reply']['ok'] is not defined


- name: "prep_for_rollback.yml: set migration status flag | element: {{ target_card }}"
  ansible.netcommon.netconf_rpc:
    rpc: action
    xmlns: urn:ietf:params:xml:ns:yang:1
    content: "{{ lookup('template', 'templates/lock_for_migration.jinja2') }}"
    display: json
  register: cf_nokia_olt_rollback__migration_status
  changed_when:
    - cf_nokia_olt_rollback__migration_status['output']['rpc-reply']['ok'] is defined
  failed_when:
    - cf_nokia_olt_rollback__migration_status['output']['rpc-reply']['ok'] is not defined


- name: "prep_for_rollback.yml: validate element state is correct to proceed to rollback | element: {{ target_card }}"
  ansible.netcommon.netconf_rpc:
    rpc: get
    xmlns: urn:ietf:params:xml:ns:netconf:base:1.0
    content: "{{ lookup('template', 'templates/get_migration_state.jinja2') }}"
    display: json
  register: cf_nokia_olt_rollback__migration_state
  until:
    - >
      cf_nokia_olt_rollback__migration_state['output']['rpc-reply']['data']
      ['anv:device-manager']['adh:device']['adh:device-state']['adh:locked-for-migration'] == "true"
    - >
      cf_nokia_olt_rollback__migration_state['output']['rpc-reply']['data']
      ['anv:device-manager']['adh:device']['swmgmt:software']['swmgmt:use-rollback-datastore'] == "true"
  retries: "{{ cf_nokia_olt_rollback__check_timers['rollback_state']['retries'] }}"
  delay: "{{ cf_nokia_olt_rollback__check_timers['rollback_state']['delay'] }}"
